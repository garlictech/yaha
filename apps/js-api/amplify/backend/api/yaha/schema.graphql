## ------ Generic types -----------------------------------------------------
type Point {
  lat: Float!
  lon: Float!
  ele: Float
}

enum PublicationState {
  draft
  published
  archived
}

# ------ TEXTUAL DESCRIPTION -----------------------------------------------------
enum TextualDescriptionType {
  markdown
  html
}

type TextualDescription {
  languageKey: String!
  title: String
  summary: String
  fullDescription: String
  type: TextualDescriptionType!
}

# ------ HIKE -----------------------------------------------------
type BoundingBox {
  NorthEast: Point!
  SouthWest: Point!
}

type RouteData {
  distance: Int!
  uphill: Int!
  downhill: Int!
  track: [[Float!]!]!
  bigBuffer: [[[Float!]!]!]!
  smallBuffer: [[[Float!]!]!]!
  averageTime: Int!
  score: Int!
  difficulty: Int!
  bounds: BoundingBox!
  isRoundTrip: Boolean!
  poiSearchBox: BoundingBox!
}

type HikeStop {
  poiId: ID!
  description: [TextualDescription!]
}

enum PoiSource {
  google
  wikipedia
  osmAmenity
  osmNatural
  osmRoute
  osmPublicTransport
  osmEmergency
  osmHistoric
  osmLeisure
  osmManMade
  osmMilitary
  osmShop
  osmTourism
  mapillary
  flickr
}

type PoiSourceObject {
  objectType: PoiSource!
  languageKey: String
  objectId: String!
  url: String
}

type Poi {
  id: ID!
  location: Point!
  types: [String!]
  description: [TextualDescription!]!
  tags: [String!]
  sourceObject: [PoiSourceObject!]!
  address: String
  phoneFloat: String
  openingHours: String
}

type Hike @model {
  id: ID!
  description: [TextualDescription!]!
  location: String!
  publicationState: PublicationState!
  featured: Boolean
  rate: String
  offlineMap: String
  featuredStops: [HikeStop]
  checkpoints: [Poi]
  tags: [String!]
  route: RouteData!
  startPoint: Point!
  endPoint: Point!
}

### THE GRAPH BASED API
interface Node {
  id: ID!
  label: ValidDataLabels
}

interface HierarchicalNode {
  parent: ID
  children: [ID]
}

enum ValidDataLabels {
  Hike
}

input GetNodeInput {
  id: ID!
  label: ValidDataLabels!
}

type Query {
  getNode(input: GetNodeInput!): Node
    @aws_iam
    @aws_cognito_user_pools
    @aws_api_key
  #    @function(name: "${env}-neptune-resolvers")
}
